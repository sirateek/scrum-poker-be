type Deck {
    ID: String!
    Name: String!
    Cards: [Card]!
}

type Card {
    Index: Int!
    DisplayValue: String!
}

type Room {
    ID: String!
    Name: String!
    Deck: Deck!
    Passcode: String
    Players: [Player]!
}

type Player {
    ID: String!
    Name: String!
    HideCard: Boolean
    PickedCard: Int
    IsSpectator: Boolean
}

input CreateRoom {
    Name: String!
    Passcode: String!
    DeckID: String!
}

type Query {
    getDeck(ID: String!): Deck
    getAvailableDecks: [Deck]
    getRoom(ID: String!): Room
    getPlayer(ID: String!): Player
}

type Mutation {
    joinRoom(ID: String!, Passcode: String!): Boolean
    createRoom(room: CreateRoom): Room
    registerPlayer(name: String!): Player
}
